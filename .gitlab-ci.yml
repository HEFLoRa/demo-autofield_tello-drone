# This file is a template, and might need editing before it works on your project.
# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html

# This template will build and test your projects
# * Caches downloaded dependencies and plugins between invocation.
# * Verify but don't deploy merge requests.
# * Deploy built artifacts from master branch only.

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"


image: maven:3.8.1-openjdk-16

stages:
  - build
  - test
  - deploy

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
before_script:
  - 'cat >$HOME/.m2/toolchains.xml<< EOF

  <?xml version="1.0" encoding="UTF8"?>
  <toolchains>
      <!-- JDK toolchains -->
      <toolchain>
          <type>jdk</type>
          <provides>
              <version>${JAVA_VERSION}</version>
              <vendor>oracle</vendor>
          </provides>
          <configuration>
              <jdkHome>${JAVA_HOME}</jdkHome>
          </configuration>
      </toolchain>
  </toolchains>

  EOF
  '

cache:
  paths:
    - .m2/repository

build:
  stage: build
  script: 'mvn $MAVEN_CLI_OPTS compile'

test:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        # - target/failsafe-reports/TEST-*.xml

pages:
  stage: deploy
  script:
    - 'mvn $MAVEN_CLI_OPTS javadoc:javadoc'
    - mv target/site/apidocs public
  artifacts:
    paths:
      - public
  only:
    - main

deploy:jdk16:
  stage: deploy
  script:
    - if [ ! -f ci_settings.xml ];
      then echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/project/packages/maven_repository.html#creating-maven-packages-with-gitlab-cicd for instructions.";
      fi
    - 'mvn $MAVEN_CLI_OPTS deploy -s ci_settings.xml'
  only:
    - main



